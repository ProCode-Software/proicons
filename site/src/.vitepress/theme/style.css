/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 * 
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attched to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

:root {
    --vp-c-default-1: var(--vp-c-gray-1);
    --vp-c-default-2: var(--vp-c-gray-2);
    --vp-c-default-3: var(--vp-c-gray-3);
    --vp-c-default-soft: var(--vp-c-gray-soft);

    --procode-blue: hsl(227, 80%, 52%);
    --procode-blue-light: hsla(227, 80%, 70%, 0.14);
    --procode-blue-2: hsl(227, 80%, 62%);
    --procode-blue-3: hsl(227, 80%, 70%);
    --vp-c-brand-1: var(--procode-blue);
    --vp-c-brand-2: var(--procode-blue-2);
    --vp-c-brand-3: var(--procode-blue-3);
    --vp-c-brand-soft: var(--procode-blue-light);

    --vp-c-tip-1: hsl(208, 70%, 52%);
    --vp-c-tip-2: hsl(208, 70%, 62%);
    --vp-c-tip-3: hsl(208, 70%, 70%);
    --vp-c-tip-soft: hsla(208, 70%, 70%, .14);

    --vp-c-warning-1: var(--vp-c-yellow-1);
    --vp-c-warning-2: var(--vp-c-yellow-2);
    --vp-c-warning-3: var(--vp-c-yellow-3);
    --vp-c-warning-soft: var(--vp-c-yellow-soft);

    --vp-c-danger-1: var(--vp-c-red-1);
    --vp-c-danger-2: var(--vp-c-red-2);
    --vp-c-danger-3: var(--vp-c-red-3);
    --vp-c-danger-soft: var(--vp-c-red-soft);

    --vp-custom-block-warning-text: var(--vp-c-warning-1);
    --vp-custom-block-danger-text: var(--vp-c-danger-1);
    --vp-custom-block-tip-text: var(--vp-c-tip-1);
    --vp-custom-block-info-text: var(--vp-c-info-1);
}

.dark {
    --procode-blue: hsl(227, 92%, 78%);
    --procode-blue-2: hsl(227, 70%, 60%);
    --procode-blue-3: hsl(227, 63%, 50%);

    --vp-c-tip-1: hsl(208, 90%, 52%);
    --vp-c-tip-2: hsl(208, 90%, 62%);
    --vp-c-tip-3: hsl(208, 90%, 70%);
    --vp-c-tip-soft: hsla(208, 95%, 50%, .14);
}

:root {
    --vp-font-family-mono: 'Fira Code', 'JetBrains Mono', 'SF Mono', 'Noto Sans Mono', monospace;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--vp-font-family-heading);
}

/**
 * Component: Button
 * -------------------------------------------------------------------------- */

:root {
    --vp-button-brand-border: transparent;
    --vp-button-brand-text: var(--vp-c-white);
    --vp-button-brand-bg: var(--vp-c-brand-2);
    --vp-button-brand-hover-border: transparent;
    --vp-button-brand-hover-text: var(--vp-c-white);
    --vp-button-brand-hover-bg: var(--vp-c-brand-3);
    --vp-button-brand-active-border: transparent;
    --vp-button-brand-active-text: var(--vp-c-white);
    --vp-button-brand-active-bg: var(--vp-c-brand-1);
}

/**
 * Component: Home
 * -------------------------------------------------------------------------- */

:root {
    --vp-home-hero-name-color: transparent;
    --vp-home-hero-name-background: var(--vp-c-brand-1);

    --vp-home-hero-image-background-image: none;
    --vp-home-hero-image-filter: blur(44px);
}

@media (min-width: 640px) {
    :root {
        --vp-home-hero-image-filter: blur(56px);
    }
}

@media (min-width: 960px) {
    :root {
        --vp-home-hero-image-filter: blur(68px);
    }
}

/**
 * Component: Custom Block
 * -------------------------------------------------------------------------- */

:root {
    --vp-custom-block-tip-border: transparent;
    --copy-transition: cubic-bezier(0.075, 0.82, 0.165, 1);
}

/**
 * Component: Algolia
 * -------------------------------------------------------------------------- */

.DocSearch {
    --docsearch-primary-color: var(--vp-c-brand-1) !important;
}

::selection {
    background: var(--vp-c-brand-1);
    color: #fff;
}

:root {
    --vp-nav-logo-height: 28px;
}

[class^='vpi-']:not(.bg),
[class*=' vpi-']:not(.bg),
.vp-icon:not(.bg),
.vp-doc [class*=language-]>button.copy::after,
p.custom-block-title::before {
    -webkit-mask: var(--icon) no-repeat;
    mask: var(--icon) no-repeat;
    -webkit-mask-size: 100% 100%;
    mask-size: 100% 100%;
    background-color: currentColor;
    color: inherit;
}

.vp-doc [class*=language-]>button.copy {
    background-image: none !important;
    --icon: var(--vp-icon-copy);
    color: rgb(128, 128, 128);
}

.vp-doc [class*=language-]>button.copy.copied {
    --icon: var(--vp-icon-copied)
}

.vp-doc [class*=language-]>button.copy::before {
    animation: copiedAnimation .25s var(--copy-transition);
}

@keyframes copiedAnimation {
    0% {
        left: 100%;
    }

    100% {
        left: 0;
    }
}

.vp-doc [class*=language-]>button.copy::after {
    width: 20px;
    height: 20px;
    content: '';
    position: absolute;
    display: block;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

p.custom-block-title::before {
    width: 20px;
    height: 20px;
    content: '';
    display: inline-flex;
}

article.box .icon {
    color: var(--vp-c-brand-1);
    background: var(--vp-c-bg);
    font-size: 26px;
}


p.custom-block-title {
    display: flex;
    gap: 5px;
    align-items: center;
}

.VPNavBarHamburger .top,
.VPNavBarHamburger .middle,
.VPNavBarHamburger .bottom {
    height: 1.5px;
    border-radius: 10px;
}

.search-keyboard-shortcuts span kbd {
    box-shadow: none !important;
    background: none !important;
    border-color: rgba(100, 100, 100, .3) !important;
    font-family: inherit;
}

.VPNavBarTitle .title > span {
    letter-spacing: -0.3px;
    font-size: 18px;
}

.VPSidebarItem.level-0 h2.text {
    color: var(--vp-c-text-3) !important;
    font-weight: 500 !important;
}

input {
    font-family: inherit;
}

.sym-img {
    background: var(--vp-c-bg-alt);
    border-radius: 15px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 25px;
}
.sym-img.sh img {
    --shadow: 0px 20px 20px rgba(0, 0, 0, .2);
    filter: drop-shadow(var(--shadow));
}
.dark .sym-img.sh img {
    --shadow: 0px 20px 10px rgb(0, 0, 0);
}
.VPFooter .copyright .VPIcon {
    font-size: 24px;
    display: inline-flex;
    margin-top: 5px;
    margin-inline: 3px;
}
.VPFooter .copyright a {
    text-decoration: none;

    &:hover {
        color: var(--vp-c-brand-1);
    }
}

.VPButton.medium {
    border-radius: 20px;
    padding: 0 20px;
    line-height: 38px;
    font-size: 14px;
}
.VPButton {
    display: inline-block;
    border: 1px solid transparent;
    text-align: center;
    font-weight: 600;
    white-space: nowrap;
    transition: color 0.25s, border-color 0.25s, background-color 0.25s;
}
.VPButton.alt {
    border-color: var(--vp-button-alt-border);
    color: var(--vp-button-alt-text);
    background-color: var(--vp-button-alt-bg);
}
.dark:has(.IconPage) svg {
    --vp-c-text-1: rgba(255, 255, 245, 1);
}
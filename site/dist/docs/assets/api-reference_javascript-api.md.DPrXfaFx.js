import{_ as i,c as s,o as a,a3 as e}from"./chunks/framework.Cyte3X77.js";const E=JSON.parse('{"title":"JavaScript ProIcons API","description":"","frontmatter":{},"headers":[],"relativePath":"api-reference/javascript-api.md","filePath":"api-reference/javascript-api.md","lastUpdated":1725233868000}'),n={name:"api-reference/javascript-api.md"},t=e('<h1 id="javascript-proicons-api" tabindex="-1">JavaScript ProIcons API <a class="header-anchor" href="#javascript-proicons-api" aria-label="Permalink to &quot;JavaScript ProIcons API&quot;">​</a></h1><p>Along with the <a href="./javascript-api">HTML API</a>, ProIcons can also be accessed though JavaScript with not much extra work needed. To add an icon, such as <code>Add</code>:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">proicons.icons.add;</span></span></code></pre></div><h2 id="installation-setup" tabindex="-1">Installation &amp; Setup <a class="header-anchor" href="#installation-setup" aria-label="Permalink to &quot;Installation &amp; Setup&quot;">​</a></h2><p>Installing ProIcons for JavaScript is similar to installing it inside of HTML, as well as other icon libraries such as <a href="https://github.com/feathericons/feather" target="_blank" rel="noreferrer">Feather</a>.</p><h3 id="install-via-npm" tabindex="-1">Install via NPM <a class="header-anchor" href="#install-via-npm" aria-label="Permalink to &quot;Install via NPM&quot;">​</a></h3><p>Just install ProIcons on <a href="https://npmjs.com/package/proicons" target="_blank" rel="noreferrer">NPM</a>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install proicons</span></span></code></pre></div><p>Then you can import ProIcons using an <code>import</code> statement in your script:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> proicons </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;proicons&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Or, if you&#39;re not in a Node environment, you can import the script directly from HTML:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path/to/proicons/dist/proicons.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="install-via-cdn-provider" tabindex="-1">Install via CDN Provider <a class="header-anchor" href="#install-via-cdn-provider" aria-label="Permalink to &quot;Install via CDN Provider&quot;">​</a></h3><p>You can also use a <code>&lt;script&gt;</code> reference to a CDN provider in your HTML file:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/proicons&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="adding-an-icon" tabindex="-1">Adding an icon <a class="header-anchor" href="#adding-an-icon" aria-label="Permalink to &quot;Adding an icon&quot;">​</a></h2><p>As mentioned earlier, ProIcons can be imported using <code>proicons.icons.{icon name}</code></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> proicons </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;proicons&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(proicons.icons.add);</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>This returns the icon as an SVG string. If you want to return the metadata of an icon, including the actual element, use <a href="./"><code>proicons.getIconInfo()</code></a></p></div><h2 id="all-methods" tabindex="-1">All Methods <a class="header-anchor" href="#all-methods" aria-label="Permalink to &quot;All Methods&quot;">​</a></h2><h3 id="proicons-replace-rootelm-element-config-proiconreplaceconfig-void" tabindex="-1"><code>proicons.replace(rootElm?: Element, config?: ProIconReplaceConfig)</code>: void <a class="header-anchor" href="#proicons-replace-rootelm-element-config-proiconreplaceconfig-void" aria-label="Permalink to &quot;`proicons.replace(rootElm?: Element, config?: ProIconReplaceConfig)`: void&quot;">​</a></h3><p>Converts all elements with the <code>proicon</code> attribute (can set to your own using <code>config.attributeName</code>) on the page to an icon corresponding to the attribute value.</p><h4 id="rootelm-element-optional" tabindex="-1"><code>rootElm</code>: Element (optional) <a class="header-anchor" href="#rootelm-element-optional" aria-label="Permalink to &quot;`rootElm`: Element (optional)&quot;">​</a></h4><p>The element to search inside for children with the <code>proicon</code> attribute. Defaults to <code>document.body</code>.</p><h4 id="config-proiconreplaceconfig-optional" tabindex="-1"><code>config</code>: <a href="./configuration">ProIconReplaceConfig</a> (optional) <a class="header-anchor" href="#config-proiconreplaceconfig-optional" aria-label="Permalink to &quot;`config`: [ProIconReplaceConfig](./configuration) (optional)&quot;">​</a></h4><p>An optional configuration to customise the behaviour of the replace method</p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><p><strong>HTML:</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> proicon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> proicon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;delete&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>JS:</strong></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> demoElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.demo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">proicons.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(demoElement, {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strokeWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#ff0000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="proicons-geticoninfo-key-string-proiconinfo" tabindex="-1"><code>proicons.getIconInfo(key: string)</code>: <a href="#proiconinfo">ProIconInfo</a> <a class="header-anchor" href="#proicons-geticoninfo-key-string-proiconinfo" aria-label="Permalink to &quot;`proicons.getIconInfo(key: string)`: [ProIconInfo](#proiconinfo)&quot;">​</a></h3><p>Returns information about an icon from the provided key.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>This method throws an error if the provided key does not match an icon name in Friendly Form, camelCase or kebab-case. Use <a href="#proiconssearchkey-string-proiconinfo"><code>proicons.search()</code></a> instead to return icons that contain a keyword inside its name or tags.</p></div><h4 id="key-string" tabindex="-1"><code>key</code>: string <a class="header-anchor" href="#key-string" aria-label="Permalink to &quot;`key`: string&quot;">​</a></h4><p>The icon name in Friendly Form, camelCase or kebab-case. Throws an error if the provided key is invalid. Case-insensitive</p><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> iconInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> proicons.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getIconInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;add&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(iconInfo.tags);</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [&#39;Plus&#39;, &#39;Create&#39;, &#39;New&#39;, &#39;Addition&#39;]</span></span></code></pre></div><h3 id="proicons-search-key-string-proiconinfo" tabindex="-1"><code>proicons.search(key: string)</code>: <a href="#proiconinfo">ProIconInfo</a>[] <a class="header-anchor" href="#proicons-search-key-string-proiconinfo" aria-label="Permalink to &quot;`proicons.search(key: string)`: [ProIconInfo](#proiconinfo)[]&quot;">​</a></h3><p>Searches for icons with names or tags that contain <code>key</code> and returns them as <code>ProIconInfo</code>. Unlike <a href="#proiconsgeticoninfokey-string-proiconinfo"><code>proicons.getIconInfo()</code></a>, you can search for icons via tags without throwing an error.</p><h4 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> icons</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> proicons.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">search</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;add&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">icons.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">icon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(icon);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="categories-string" tabindex="-1"><code>categories</code>: string[] <a class="header-anchor" href="#categories-string" aria-label="Permalink to &quot;`categories`: string[]&quot;">​</a></h3><p>Lists all icon categories.</p><p>As of v4.8 there are 29 icon categories:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Actions, Security, Communication &amp; Cloud, Objects, Status, Emojis, Arrows, Text, Files, System &amp; Interface, Places &amp; Transportation, Layout, Design, Window, Development, Shapes, Accents, Logos &amp; Brands, Activities, Business, Food &amp; Drink, Gestures, Math &amp; Numbers, Media, Nature, Miscellaneous, Organization, Technology, Weather</span></span></code></pre></div><h3 id="icons" tabindex="-1"><code>icons</code> <a class="header-anchor" href="#icons" aria-label="Permalink to &quot;`icons`&quot;">​</a></h3><p>An object containing all icons as SVG strings with camelCase keys</p><h4 id="example-3" tabindex="-1">Example <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(proicons.icons.add);</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &lt;svg width=&quot;24&quot; height=&quot;24&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;&lt;path d=&quot;M4 12H12M12 12L20 12M12 12V4M12 12L12 20&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;1.5&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&lt;/svg&gt;</span></span></code></pre></div><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><h3 id="proiconinfo" tabindex="-1"><code>ProIconInfo</code> <a class="header-anchor" href="#proiconinfo" aria-label="Permalink to &quot;`ProIconInfo`&quot;">​</a></h3><p>Contains the information about an icon</p><p><strong>Example:</strong></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;kebabCase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;camelCase&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;element&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Element,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;category&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Actions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;tags&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Plus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Create&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;New&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Addition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="name-string" tabindex="-1"><code>name</code>: string <a class="header-anchor" href="#name-string" aria-label="Permalink to &quot;`name`: string&quot;">​</a></h4><p>The name of the icon in Friendly Form</p><h4 id="kebabcase-string" tabindex="-1"><code>kebabCase</code>: string <a class="header-anchor" href="#kebabcase-string" aria-label="Permalink to &quot;`kebabCase`: string&quot;">​</a></h4><p>The name of the icon in kebab-case</p><h4 id="camelcase-string" tabindex="-1"><code>camelCase</code>: string <a class="header-anchor" href="#camelcase-string" aria-label="Permalink to &quot;`camelCase`: string&quot;">​</a></h4><p>The name of the icon in camelCase</p><h4 id="element-svgsvgelement" tabindex="-1"><code>element</code>: SVGSVGElement <a class="header-anchor" href="#element-svgsvgelement" aria-label="Permalink to &quot;`element`: SVGSVGElement&quot;">​</a></h4><p>The icon as an <code>SVGElement</code>. Use the <code>outerHTML</code> property on this to return the icon as a string.</p><h4 id="category-string" tabindex="-1"><code>category</code>: string <a class="header-anchor" href="#category-string" aria-label="Permalink to &quot;`category`: string&quot;">​</a></h4><p>The category of the icon.</p><h4 id="tags-string" tabindex="-1"><code>tags</code>: string[] <a class="header-anchor" href="#tags-string" aria-label="Permalink to &quot;`tags`: string[]&quot;">​</a></h4><p>An array of the icon&#39;s tags.</p><h3 id="interface-proiconreplaceconfig" tabindex="-1">Interface <code>ProIconReplaceConfig</code> <a class="header-anchor" href="#interface-proiconreplaceconfig" aria-label="Permalink to &quot;Interface `ProIconReplaceConfig`&quot;">​</a></h3><p>See <a href="./configuration">Configuration</a></p><h2 id="see-also" tabindex="-1">See also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See also&quot;">​</a></h2><ul><li><a href="./configuration">ProIcons Configuration</a></li><li><a href="./javascript-api">HTML ProIcon API</a></li><li><a href="https://npmjs.com/package/proicons" target="_blank" rel="noreferrer">NPM Package</a></li></ul>',72),o=[t];function l(h,p,r,c,k,d){return a(),s("div",null,o)}const u=i(n,[["render",l]]);export{E as __pageData,u as default};
